podTemplate(label: 'image-sign-scan-base-slave', cloud: 'openshift', serviceAccount: "jenkins", containers: [
containerTemplate(name: 'image-sign-scan-base', image: 'openshift/image-inspector:latest', ttyEnabled: true, privileged: true, command: 'cat', resourceRequestMemory: '1Gi'),
containerTemplate(name: 'jnlp', image: 'openshift3/jenkins-slave-base-rhel7', args: '${computer.jnlpmac} ${computer.name}', privileged: true)
],
volumes: [
    hostPathVolume(
      hostPath: '/var/run/docker.sock',
      mountPath: '/var/run/docker.sock'
    )
]
) {

  node('image-sign-scan-base-slave') {
    container('image-sign-scan-base') {

      stage('scan image') {
        image_result = sh(script: """
        set +x
        WORKING_DIR=\$(mktemp -d -t cve-scan-XXXXX)
        IMAGE_CONTENT=\${WORKING_DIR}/image-content
        RESULTS=/tmp/results

        mkdir -p \$IMAGE_CONTENT

        image-inspector --path=\${IMAGE_CONTENT} --scan-results-dir=\${RESULTS} --scan-type=openscap --openscap-html-report --image=$IMAGE_TO_SCAN

        mv /tmp/results/* ${WORKSPACE}

        rm -rf \${WORKING_DIR}
        set +e
        grep "<result>fail</result>" ${WORKSPACE}/results-arf.xml

        RESULT=\$?

        if [ \${RESULT} -ne 0 ]; then
          exit 0
        else
          exit 1
        fi

        """, returnStatus: true)
        input('waiting')

        archiveArtifacts(artifacts: 'results.html')

        if(image_result != 0) {
            currentBuild.result = 'FAILURE'
            error("Image Scanning Failed!")
        }
      }
    }
  }
}
